{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"sing-box Rules","text":"Name GitHub Cloudflare \ud83d\uded1 RuleSet: ADs rule-set/ads.srs rule-set/ads.srs \ud83d\udd12 RuleSet: Private rule-set/private.srs rule-set/private.srs \ud83c\udde8\ud83c\uddf3 RuleSet: CN rule-set/cn.srs rule-set/cn.srs \u2708\ufe0f RuleSet: Proxy rule-set/proxy.srs rule-set/proxy.srs \ud83e\udd16 RuleSet: AI rule-set/ai.srs rule-set/ai.srs \u2601\ufe0f RuleSet: Download rule-set/download.srs rule-set/download.srs \ud83c\udf5f RuleSet: Emby rule-set/emby.srs rule-set/emby.srs \ud83d\udcfa RuleSet: Media rule-set/media.srs rule-set/media.srs \ud83c\udde8\ud83c\uddf3 GeoIP: CN geoip/cn.srs geoip/cn.srs \ud83d\uded1 GeoSite: ADs geosite/ads.srs geosite/ads.srs \ud83d\udd12 GeoSite: Private geosite/private.srs geosite/private.srs \ud83c\udde8\ud83c\uddf3 GeoSite: CN geosite/cn.srs geosite/cn.srs \u2708\ufe0f GeoSite: Proxy geosite/proxy.srs geosite/proxy.srs <ul> <li>statistics</li> <li><code>GeoSite: *</code> does not contain <code>IP-CIDR</code> rules, useful for DNS Rule.</li> <li><code>GeoIP: *</code> does not contain <code>DOMAIN*</code> rules, useful for DNS Rule.</li> </ul>"},{"location":"#optimization","title":"Optimization","text":"<p>optimization results</p> <ul> <li>remove duplicate rules</li> <li>remove unresolvable domains</li> <li>merge <code>DOMAIN</code> with <code>DOMAIN-SUFFIX</code></li> <li>merge between <code>DOMAIN-SUFFIX</code></li> <li>merge <code>DOMAIN</code> with <code>DOMAIN-KEYWORD</code></li> <li>merge <code>DOMAIN-SUFFIX</code> with <code>DOMAIN-KEYWORD</code></li> <li>merge <code>IP-CIDR</code></li> </ul>"},{"location":"#acknowledgement","title":"Acknowledgement","text":"<ul> <li>blackmatrix7/ios_rule_script</li> <li>DustinWin/ruleset_geodata</li> <li>MetaCubeX/meta-rules-dat</li> <li>NotSFC/rulelist</li> </ul>"},{"location":"SUMMARY/","title":"SUMMARY","text":"<ul> <li>Home</li> <li>Config</li> <li>Sources</li> <li>Statistics</li> <li>API Reference</li> </ul>"},{"location":"config/","title":"Example sing-box Config","text":""},{"location":"config/#dns","title":"DNS","text":"CommonFakeIP, iOS <pre><code>{\n  \"$schema\": \"https://gist.github.com/artiga033/fea992d95ad44dc8d024b229223b1002/raw/83c676c1ec9f37af2bce0505da396b5444b30032/sing-box.schema.json\",\n  \"dns\": {\n    \"servers\": [\n      { \"tag\": \"dns:proxy\", \"address\": \"https://8.8.8.8/dns-query\" },\n      { \"tag\": \"dns:local\", \"address\": \"local\", \"detour\": \"DIRECT\" },\n      { \"tag\": \"dns:reject\", \"address\": \"rcode://refused\" }\n    ],\n    \"rules\": [\n      { \"outbound\": \"any\", \"server\": \"dns:local\" },\n      {\n        \"rule_set\": \"geosite:ads\",\n        \"server\": \"dns:reject\",\n        \"disable_cache\": true\n      },\n      { \"rule_set\": \"geosite:private\", \"server\": \"dns:local\" },\n      { \"clash_mode\": \"direct\", \"server\": \"dns:local\" },\n      { \"clash_mode\": \"global\", \"server\": \"dns:proxy\" },\n      { \"rule_set\": \"geosite:cn\", \"server\": \"dns:local\" },\n      {\n        \"type\": \"logical\",\n        \"mode\": \"and\",\n        \"rules\": [\n          { \"rule_set\": \"geosite:proxy\", \"invert\": true },\n          { \"rule_set\": \"geoip:cn\" }\n        ],\n        \"server\": \"dns:proxy\",\n        \"client_subnet\": \"101.6.6.6\"\n      }\n    ],\n    \"final\": \"dns:proxy\",\n    \"independent_cache\": true\n  }\n}\n</code></pre> <pre><code>{\n  \"$schema\": \"https://gist.github.com/artiga033/fea992d95ad44dc8d024b229223b1002/raw/83c676c1ec9f37af2bce0505da396b5444b30032/sing-box.schema.json\",\n  \"dns\": {\n    \"servers\": [\n      { \"tag\": \"dns:proxy\", \"address\": \"https://8.8.8.8/dns-query\" },\n      { \"tag\": \"dns:local\", \"address\": \"local\", \"detour\": \"DIRECT\" },\n      { \"tag\": \"dns:reject\", \"address\": \"rcode://refused\" },\n      { \"tag\": \"dns:fakeip\", \"address\": \"fakeip\" }\n    ],\n    \"rules\": [\n      { \"outbound\": \"any\", \"server\": \"dns:local\" },\n      {\n        \"rule_set\": \"geosite:ads\",\n        \"server\": \"dns:reject\",\n        \"disable_cache\": true\n      },\n      { \"rule_set\": \"geosite:private\", \"server\": \"dns:local\" },\n      { \"query_type\": [\"A\", \"AAAA\"], \"server\": \"dns:fakeip\", \"rewrite_ttl\": 1 },\n      { \"clash_mode\": \"direct\", \"server\": \"dns:local\" },\n      { \"clash_mode\": \"global\", \"server\": \"dns:proxy\" },\n      { \"rule_set\": \"geosite:cn\", \"server\": \"dns:local\" },\n      {\n        \"type\": \"logical\",\n        \"mode\": \"and\",\n        \"rules\": [\n          { \"rule_set\": \"geosite:proxy\", \"invert\": true },\n          { \"rule_set\": \"geoip:cn\" }\n        ],\n        \"server\": \"dns:proxy\",\n        \"client_subnet\": \"101.6.6.6\"\n      }\n    ],\n    \"final\": \"dns:proxy\",\n    \"independent_cache\": true,\n    \"fakeip\": {\n      \"enabled\": true,\n      \"inet4_range\": \"198.18.0.0/15\",\n      \"inet6_range\": \"fc00::/18\"\n    }\n  }\n}\n</code></pre>"},{"location":"config/#route","title":"Route","text":"<pre><code>{\n  \"$schema\": \"https://gist.github.com/artiga033/fea992d95ad44dc8d024b229223b1002/raw/83c676c1ec9f37af2bce0505da396b5444b30032/sing-box.schema.json\",\n  \"route\": {\n    \"rules\": [\n      {\n        \"type\": \"logical\",\n        \"mode\": \"or\",\n        \"rules\": [{ \"protocol\": \"dns\" }, { \"port\": 53 }],\n        \"outbound\": \"out:dns\"\n      },\n      {\n        \"type\": \"logical\",\n        \"mode\": \"or\",\n        \"rules\": [\n          { \"port\": 853 },\n          { \"network\": \"udp\", \"port\": 443 },\n          { \"protocol\": \"stun\" }\n        ],\n        \"outbound\": \"REJECT\"\n      },\n      { \"rule_set\": \"rule-set:ads\", \"outbound\": \"REJECT\" },\n      {\n        \"ip_is_private\": true,\n        \"rule_set\": \"rule-set:private\",\n        \"outbound\": \"DIRECT\"\n      },\n      { \"clash_mode\": \"direct\", \"outbound\": \"DIRECT\" },\n      { \"clash_mode\": \"global\", \"outbound\": \"PROXY\" },\n      { \"rule_set\": \"rule-set:cn\", \"outbound\": \"DIRECT\" },\n      { \"rule_set\": \"rule-set:ai\", \"outbound\": \"\ud83e\udd16 AI\" },\n      { \"rule_set\": \"rule-set:download\", \"outbound\": \"\u2601\ufe0f Download\" },\n      { \"rule_set\": \"rule-set:emby\", \"outbound\": \"\ud83c\udf5f Emby\" },\n      { \"rule_set\": \"rule-set:media\", \"outbound\": \"\ud83d\udcfa Media\" }\n    ],\n    \"final\": \"PROXY\",\n    \"auto_detect_interface\": true\n  }\n}\n</code></pre>"},{"location":"sources/","title":"Data Sources","text":"<p>Note</p> <p>Exclusion is implemented as simple set difference, which does not mean the difference of rule sets. For example, \ud83c\udde8\ud83c\uddf3 CN contains <code>DOMAIN,www.gstatic.com</code>, and \u2708\ufe0f Proxy contains <code>DOMAIN-SUFFIX,gstatic.com</code>, then after set difference (<code>proxy -= cn</code>), \u2708\ufe0f Proxy can still match <code>www.gstatic.com</code>.</p>"},{"location":"sources/#ads","title":"\ud83d\uded1 ADs","text":"<ul> <li>include:<ul> <li>blackmatrix7/Advertising.list</li> <li>DustinWin/geosite-all.db: <code>ads</code></li> <li>MetaCubeX/geosite.db: <code>*-ads</code> | <code>*-ads-all</code> | <code>*@ads</code></li> </ul> </li> </ul>"},{"location":"sources/#private","title":"\ud83d\udd12 Private","text":"<ul> <li>include:<ul> <li>blackmatrix7/Lan.list</li> <li>blackmatrix7/NTPService.list</li> <li>DustinWin/geoip-all.db: <code>private</code></li> <li>DustinWin/geosite-all.db: <code>private</code></li> <li>MetaCubeX/geoip.db: <code>private</code></li> <li>MetaCubeX/geosite.db: <code>category-ntp*</code>, <code>private</code></li> </ul> </li> <li>exclude:<ul> <li>\ud83d\uded1 ADs</li> </ul> </li> </ul>"},{"location":"sources/#cn","title":"\ud83c\udde8\ud83c\uddf3 CN","text":"<ul> <li>include:<ul> <li>blackmatrix7/ChinaMax.list</li> <li>blackmatrix7/Direct.list</li> <li>DustinWin/geoip-all.db: <code>cn</code></li> <li>DustinWin/geosite-all.db: <code>cn</code></li> <li>liblaf/cn.json</li> <li>MetaCubeX/geoip.db: <code>cn</code></li> <li>MetaCubeX/geosite.db: <code>*-cn</code> | <code>*@cn</code> | <code>cn</code></li> </ul> </li> <li>exclude:<ul> <li>\ud83d\uded1 ADs</li> <li>\ud83d\udd12 Private</li> </ul> </li> </ul>"},{"location":"sources/#proxy","title":"\u2708\ufe0f Proxy","text":"<ul> <li>include:<ul> <li>blackmatrix7/Global.list</li> <li>DustinWin/geosite-all.db: <code>proxy</code></li> <li>MetaCubeX/geosite.db: <code>*!cn*</code></li> </ul> </li> <li>exclude:<ul> <li>\ud83c\udde8\ud83c\uddf3 CN</li> <li>\ud83d\uded1 ADs</li> <li>\ud83d\udd12 Private</li> </ul> </li> </ul>"},{"location":"sources/#ai","title":"\ud83e\udd16 AI","text":"<ul> <li>include:<ul> <li>blackmatrix7/Claude.list</li> <li>blackmatrix7/Copilot.list</li> <li>blackmatrix7/Gemini.list</li> <li>blackmatrix7/OpenAI.list</li> <li>DustinWin/geosite-all.db: <code>ai</code></li> <li>MetaCubeX/geosite.db: <code>openai</code></li> </ul> </li> <li>exclude:<ul> <li>\ud83c\udde8\ud83c\uddf3 CN</li> <li>\ud83d\uded1 ADs</li> <li>\ud83d\udd12 Private</li> </ul> </li> </ul>"},{"location":"sources/#download","title":"\u2601\ufe0f Download","text":"<p>\ud83d\udd34 latency insensitive, \ud83d\udfe2 high bandwidth</p> <ul> <li>include:<ul> <li>blackmatrix7/Developer.list</li> <li>blackmatrix7/Download.list</li> <li>blackmatrix7/OneDrive.list</li> <li>MetaCubeX/geosite.db: <code>category-dev</code> | <code>onedrive</code></li> </ul> </li> <li>exclude:<ul> <li>\ud83c\udde8\ud83c\uddf3 CN</li> <li>\ud83d\uded1 ADs</li> <li>\ud83d\udd12 Private</li> </ul> </li> </ul>"},{"location":"sources/#emby","title":"\ud83c\udf5f Emby","text":"<ul> <li>include:<ul> <li>NotSFC/Emby.json</li> </ul> </li> <li>exclude:<ul> <li>\ud83c\udde8\ud83c\uddf3 CN</li> <li>\ud83d\uded1 ADs</li> <li>\ud83d\udd12 Private</li> </ul> </li> </ul>"},{"location":"sources/#media","title":"\ud83d\udcfa Media","text":"<p>\ud83d\udfe2 low latency, \ud83d\udfe2 high bandwidth</p> <ul> <li>include:<ul> <li>blackmatrix7/GlobalMedia.list</li> <li>DustinWin/geosite-all.db: <code>youtube</code></li> <li>MetaCubeX/geosite-lite.db: <code>proxymedia</code>, <code>youtube</code></li> <li>MetaCubeX/geosite.db: <code>youtube</code></li> </ul> </li> <li>exclude:<ul> <li>\ud83c\udde8\ud83c\uddf3 CN</li> <li>\ud83d\uded1 ADs</li> <li>\ud83d\udd12 Private</li> </ul> </li> </ul>"},{"location":"sources/#acknowledgement","title":"Acknowledgement","text":"<ul> <li>blackmatrix7/ios_rule_script</li> <li>DustinWin/ruleset_geodata</li> <li>MetaCubeX/meta-rules-dat</li> <li>NotSFC/rulelist</li> </ul>"},{"location":"stats/","title":"sing-box Rules","text":"<p>Updated at: 2024-09-19T00:32:15.223794+00:00</p>"},{"location":"stats/#ads","title":"\ud83d\uded1 ADs","text":"Type Count (Raw) Count (Opt) DOMAIN 112235 14226 DOMAIN-SUFFIX 236396 142750 DOMAIN-KEYWORD 259 259 DOMAIN-REGEX 3 3 IP-CIDR 452 452 TOTAL 349345 157690"},{"location":"stats/#private","title":"\ud83d\udd12 Private","text":"Type Count (Raw) Count (Opt) DOMAIN 309 148 DOMAIN-SUFFIX 365 235 DOMAIN-KEYWORD 0 0 DOMAIN-REGEX 8 8 IP-CIDR 18 18 TOTAL 700 409"},{"location":"stats/#cn","title":"\ud83c\udde8\ud83c\uddf3 CN","text":"Type Count (Raw) Count (Opt) DOMAIN 94238 748 DOMAIN-SUFFIX 185775 91874 DOMAIN-KEYWORD 48 48 DOMAIN-REGEX 35 35 IP-CIDR 21630 19410 TOTAL 301726 112115"},{"location":"stats/#proxy","title":"\u2708\ufe0f Proxy","text":"Type Count (Raw) Count (Opt) DOMAIN 25647 52 DOMAIN-SUFFIX 50920 18481 DOMAIN-KEYWORD 36 36 DOMAIN-REGEX 162 162 IP-CIDR 115 115 TOTAL 76880 18846"},{"location":"stats/#ai","title":"\ud83e\udd16 AI","text":"Type Count (Raw) Count (Opt) DOMAIN 55 16 DOMAIN-SUFFIX 69 31 DOMAIN-KEYWORD 5 5 DOMAIN-REGEX 1 1 IP-CIDR 2 2 TOTAL 132 55"},{"location":"stats/#download","title":"\u2601\ufe0f Download","text":"Type Count (Raw) Count (Opt) DOMAIN 482 27 DOMAIN-SUFFIX 532 476 DOMAIN-KEYWORD 8 8 DOMAIN-REGEX 2 2 IP-CIDR 0 0 TOTAL 1024 513"},{"location":"stats/#emby","title":"\ud83c\udf5f Emby","text":"Type Count (Raw) Count (Opt) DOMAIN 0 0 DOMAIN-SUFFIX 122 70 DOMAIN-KEYWORD 1 1 DOMAIN-REGEX 0 0 IP-CIDR 2 2 TOTAL 125 73"},{"location":"stats/#media","title":"\ud83d\udcfa Media","text":"Type Count (Raw) Count (Opt) DOMAIN 203 26 DOMAIN-SUFFIX 1413 1028 DOMAIN-KEYWORD 25 25 DOMAIN-REGEX 0 0 IP-CIDR 910 910 TOTAL 2551 1989"},{"location":"api/SUMMARY/","title":"SUMMARY","text":"<ul> <li>sbr<ul> <li>sbr.container<ul> <li>sbr.container.optim</li> </ul> </li> <li>sbr.logging</li> <li>sbr.source<ul> <li>sbr.source.preset</li> </ul> </li> <li>sbr.typing</li> <li>sbr.utils</li> </ul> </li> </ul>"},{"location":"api/sbr/","title":"sbr","text":""},{"location":"api/sbr/#sbr.PRESETS","title":"PRESETS  <code>module-attribute</code>","text":"<pre><code>PRESETS: list[PresetConfig] = [\n    PresetConfig(\n        \"ads\",\n        \"\ud83d\uded1 ADs\",\n        [\n            \"blackmatrix7:Advertising\",\n            \"DustinWin/geosite-all:ads\",\n            \"MetaCubeX/geosite:*-ads,*-ads-all,*@ads\",\n        ],\n        [],\n    ),\n    PresetConfig(\n        \"private\",\n        \"\ud83d\udd12 Private\",\n        [\n            \"blackmatrix7:Lan,NTPService\",\n            \"DustinWin/geoip-all:private\",\n            \"DustinWin/geosite-all:private\",\n            \"MetaCubeX/geoip:private\",\n            \"MetaCubeX/geosite:category-ntp*,private\",\n        ],\n        [\"preset:ads\"],\n    ),\n    PresetConfig(\n        \"cn\",\n        \"\ud83c\udde8\ud83c\uddf3 CN\",\n        [\n            \"blackmatrix7:ChinaMax,Direct\",\n            \"DustinWin/geoip-all:cn\",\n            \"DustinWin/geosite-all:cn\",\n            \"liblaf:cn\",\n            \"MetaCubeX/geoip:cn\",\n            \"MetaCubeX/geosite:cn,*-cn,*@cn\",\n        ],\n        [\"preset:ads\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"proxy\",\n        \"\u2708\ufe0f Proxy\",\n        [\n            \"blackmatrix7:Global\",\n            \"DustinWin/geosite-all:proxy\",\n            \"MetaCubeX/geosite:*!cn*\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"ai\",\n        \"\ud83e\udd16 AI\",\n        [\n            \"blackmatrix7:Claude,Copilot,Gemini,OpenAI\",\n            \"DustinWin/geosite-all:ai\",\n            \"MetaCubeX/geosite:openai\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"download\",\n        \"\u2601\ufe0f Download\",\n        [\n            \"blackmatrix7:Developer,Download,OneDrive\",\n            \"MetaCubeX/geosite:category-dev,onedrive\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"emby\",\n        \"\ud83c\udf5f Emby\",\n        [\"NotSFC:Emby\"],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"media\",\n        \"\ud83d\udcfa Media\",\n        [\n            \"blackmatrix7:GlobalMedia\",\n            \"DustinWin/geosite-all:youtube\",\n            \"MetaCubeX/geosite-lite:proxymedia,youtube\",\n            \"MetaCubeX/geosite:youtube\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n]\n</code></pre>"},{"location":"api/sbr/#sbr.PresetConfig","title":"PresetConfig","text":"<p>               Bases: <code>NamedTuple</code></p>"},{"location":"api/sbr/#sbr.PresetConfig.exclude","title":"exclude  <code>instance-attribute</code>","text":"<pre><code>exclude: list[str]\n</code></pre>"},{"location":"api/sbr/#sbr.PresetConfig.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: str\n</code></pre>"},{"location":"api/sbr/#sbr.PresetConfig.include","title":"include  <code>instance-attribute</code>","text":"<pre><code>include: list[str]\n</code></pre>"},{"location":"api/sbr/#sbr.PresetConfig.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/sbr/#sbr.Rule","title":"Rule","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api/sbr/#sbr.Rule.domain","title":"domain  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domain: Set = set()\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.domain_keyword","title":"domain_keyword  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domain_keyword: Set = set()\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.domain_regex","title":"domain_regex  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domain_regex: Set = set()\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.domain_suffix","title":"domain_suffix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domain_suffix: Set = set()\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.ip_cidr","title":"ip_cidr  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_cidr: Set = set()\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(extra='forbid')\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.__getitem__","title":"__getitem__","text":"<pre><code>__getitem__(key: str) -&gt; set[str]\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.__len__","title":"__len__","text":"<pre><code>__len__() -&gt; int\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.__or__","title":"__or__","text":"<pre><code>__or__(other: Rule) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.__sub__","title":"__sub__","text":"<pre><code>__sub__(other: Rule) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.difference","title":"difference","text":"<pre><code>difference(*others: Rule) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.from_file","title":"from_file  <code>classmethod</code>","text":"<pre><code>from_file(path: StrPath) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.geoip","title":"geoip","text":"<pre><code>geoip() -&gt; Rule\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.geosite","title":"geosite","text":"<pre><code>geosite() -&gt; Rule\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.op","title":"op","text":"<pre><code>op(op: Callable[[Any, Any], Any], other: Rule) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.optimize","title":"optimize","text":"<pre><code>optimize() -&gt; None\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.save","title":"save","text":"<pre><code>save(path: StrPath) -&gt; None\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.summary","title":"summary","text":"<pre><code>summary() -&gt; str\n</code></pre>"},{"location":"api/sbr/#sbr.Rule.union","title":"union","text":"<pre><code>union(*others: Rule) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/#sbr.RuleSet","title":"RuleSet","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api/sbr/#sbr.RuleSet.rules","title":"rules  <code>instance-attribute</code>","text":"<pre><code>rules: list[Rule]\n</code></pre>"},{"location":"api/sbr/#sbr.RuleSet.version","title":"version  <code>instance-attribute</code>","text":"<pre><code>version: Literal[1, 2]\n</code></pre>"},{"location":"api/sbr/#sbr.RuleSet.from_file","title":"from_file  <code>classmethod</code>","text":"<pre><code>from_file(path: StrPath) -&gt; RuleSet\n</code></pre>"},{"location":"api/sbr/#sbr.RuleSet.save","title":"save","text":"<pre><code>save(path: StrPath) -&gt; None\n</code></pre>"},{"location":"api/sbr/#sbr.Source","title":"Source","text":"<p>               Bases: <code>ABC</code></p>"},{"location":"api/sbr/#sbr.Source.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/sbr/#sbr.Source.__init__","title":"__init__","text":"<pre><code>__init__() -&gt; None\n</code></pre>"},{"location":"api/sbr/#sbr.Source.get","title":"get  <code>async</code>","text":"<pre><code>get(*key: str) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/#sbr.Source.keys","title":"keys  <code>async</code>","text":"<pre><code>keys() -&gt; list[str]\n</code></pre>"},{"location":"api/sbr/#sbr.get_rule","title":"get_rule  <code>async</code>","text":"<pre><code>get_rule(*spec: str) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/#sbr.get_source","title":"get_source","text":"<pre><code>get_source(name: str) -&gt; Source\n</code></pre>"},{"location":"api/sbr/container/","title":"sbr.container","text":""},{"location":"api/sbr/container/#sbr.container.Rule","title":"Rule","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api/sbr/container/#sbr.container.Rule.domain","title":"domain  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domain: Set = set()\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.domain_keyword","title":"domain_keyword  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domain_keyword: Set = set()\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.domain_regex","title":"domain_regex  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domain_regex: Set = set()\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.domain_suffix","title":"domain_suffix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domain_suffix: Set = set()\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.ip_cidr","title":"ip_cidr  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_cidr: Set = set()\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(extra='forbid')\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.__getitem__","title":"__getitem__","text":"<pre><code>__getitem__(key: str) -&gt; set[str]\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.__len__","title":"__len__","text":"<pre><code>__len__() -&gt; int\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.__or__","title":"__or__","text":"<pre><code>__or__(other: Rule) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.__sub__","title":"__sub__","text":"<pre><code>__sub__(other: Rule) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.difference","title":"difference","text":"<pre><code>difference(*others: Rule) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.from_file","title":"from_file  <code>classmethod</code>","text":"<pre><code>from_file(path: StrPath) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.geoip","title":"geoip","text":"<pre><code>geoip() -&gt; Rule\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.geosite","title":"geosite","text":"<pre><code>geosite() -&gt; Rule\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.op","title":"op","text":"<pre><code>op(op: Callable[[Any, Any], Any], other: Rule) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.optimize","title":"optimize","text":"<pre><code>optimize() -&gt; None\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.save","title":"save","text":"<pre><code>save(path: StrPath) -&gt; None\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.summary","title":"summary","text":"<pre><code>summary() -&gt; str\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.Rule.union","title":"union","text":"<pre><code>union(*others: Rule) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.RuleSet","title":"RuleSet","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api/sbr/container/#sbr.container.RuleSet.rules","title":"rules  <code>instance-attribute</code>","text":"<pre><code>rules: list[Rule]\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.RuleSet.version","title":"version  <code>instance-attribute</code>","text":"<pre><code>version: Literal[1, 2]\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.RuleSet.from_file","title":"from_file  <code>classmethod</code>","text":"<pre><code>from_file(path: StrPath) -&gt; RuleSet\n</code></pre>"},{"location":"api/sbr/container/#sbr.container.RuleSet.save","title":"save","text":"<pre><code>save(path: StrPath) -&gt; None\n</code></pre>"},{"location":"api/sbr/container/optim/","title":"sbr.container.optim","text":""},{"location":"api/sbr/container/optim/#sbr.container.optim.merge_between_suffix","title":"merge_between_suffix","text":"<pre><code>merge_between_suffix(domain_suffix: set[str]) -&gt; set[str]\n</code></pre>"},{"location":"api/sbr/container/optim/#sbr.container.optim.merge_domain_with_keyword","title":"merge_domain_with_keyword","text":"<pre><code>merge_domain_with_keyword(\n    domain: set[str], domain_keyword: set[str]\n) -&gt; tuple[set[str], set[str]]\n</code></pre>"},{"location":"api/sbr/container/optim/#sbr.container.optim.merge_domain_with_suffix","title":"merge_domain_with_suffix","text":"<pre><code>merge_domain_with_suffix(\n    domain: set[str], domain_suffix: set[str]\n) -&gt; tuple[set[str], set[str]]\n</code></pre>"},{"location":"api/sbr/container/optim/#sbr.container.optim.merge_ip_cidr","title":"merge_ip_cidr","text":"<pre><code>merge_ip_cidr(ip_cidr: set[str]) -&gt; set[str]\n</code></pre>"},{"location":"api/sbr/container/optim/#sbr.container.optim.merge_suffix_with_keyword","title":"merge_suffix_with_keyword","text":"<pre><code>merge_suffix_with_keyword(\n    domain_suffix: set[str], domain_keyword: set[str]\n) -&gt; tuple[set[str], set[str]]\n</code></pre>"},{"location":"api/sbr/container/optim/#sbr.container.optim.remove_unresolvable","title":"remove_unresolvable","text":"<pre><code>remove_unresolvable(domain: set[str]) -&gt; set[str]\n</code></pre>"},{"location":"api/sbr/logging/","title":"sbr.logging","text":""},{"location":"api/sbr/logging/#sbr.logging.init","title":"init","text":"<pre><code>init(level: str | int = logging.NOTSET) -&gt; None\n</code></pre>"},{"location":"api/sbr/source/","title":"sbr.source","text":""},{"location":"api/sbr/source/#sbr.source.PRESETS","title":"PRESETS  <code>module-attribute</code>","text":"<pre><code>PRESETS: list[PresetConfig] = [\n    PresetConfig(\n        \"ads\",\n        \"\ud83d\uded1 ADs\",\n        [\n            \"blackmatrix7:Advertising\",\n            \"DustinWin/geosite-all:ads\",\n            \"MetaCubeX/geosite:*-ads,*-ads-all,*@ads\",\n        ],\n        [],\n    ),\n    PresetConfig(\n        \"private\",\n        \"\ud83d\udd12 Private\",\n        [\n            \"blackmatrix7:Lan,NTPService\",\n            \"DustinWin/geoip-all:private\",\n            \"DustinWin/geosite-all:private\",\n            \"MetaCubeX/geoip:private\",\n            \"MetaCubeX/geosite:category-ntp*,private\",\n        ],\n        [\"preset:ads\"],\n    ),\n    PresetConfig(\n        \"cn\",\n        \"\ud83c\udde8\ud83c\uddf3 CN\",\n        [\n            \"blackmatrix7:ChinaMax,Direct\",\n            \"DustinWin/geoip-all:cn\",\n            \"DustinWin/geosite-all:cn\",\n            \"liblaf:cn\",\n            \"MetaCubeX/geoip:cn\",\n            \"MetaCubeX/geosite:cn,*-cn,*@cn\",\n        ],\n        [\"preset:ads\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"proxy\",\n        \"\u2708\ufe0f Proxy\",\n        [\n            \"blackmatrix7:Global\",\n            \"DustinWin/geosite-all:proxy\",\n            \"MetaCubeX/geosite:*!cn*\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"ai\",\n        \"\ud83e\udd16 AI\",\n        [\n            \"blackmatrix7:Claude,Copilot,Gemini,OpenAI\",\n            \"DustinWin/geosite-all:ai\",\n            \"MetaCubeX/geosite:openai\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"download\",\n        \"\u2601\ufe0f Download\",\n        [\n            \"blackmatrix7:Developer,Download,OneDrive\",\n            \"MetaCubeX/geosite:category-dev,onedrive\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"emby\",\n        \"\ud83c\udf5f Emby\",\n        [\"NotSFC:Emby\"],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"media\",\n        \"\ud83d\udcfa Media\",\n        [\n            \"blackmatrix7:GlobalMedia\",\n            \"DustinWin/geosite-all:youtube\",\n            \"MetaCubeX/geosite-lite:proxymedia,youtube\",\n            \"MetaCubeX/geosite:youtube\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n]\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.ClashClassicalText","title":"ClashClassicalText","text":"<p>               Bases: <code>Source</code></p>"},{"location":"api/sbr/source/#sbr.source.ClashClassicalText.dpath","title":"dpath  <code>instance-attribute</code>","text":"<pre><code>dpath: Path = Path(dpath)\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.ClashClassicalText.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str = name\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.ClashClassicalText.url","title":"url  <code>instance-attribute</code>","text":"<pre><code>url: Template\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.ClashClassicalText.__init__","title":"__init__","text":"<pre><code>__init__(\n    name: str, url: str | Template, dpath: StrPath\n) -&gt; None\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.ClashClassicalText.from_file","title":"from_file  <code>staticmethod</code>","text":"<pre><code>from_file(fpath: StrPath) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.ClashClassicalText.get","title":"get  <code>async</code>","text":"<pre><code>get(*key: str) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.ClashClassicalText.keys","title":"keys  <code>async</code>","text":"<pre><code>keys() -&gt; list[str]\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoIP","title":"GeoIP","text":"<p>               Bases: <code>Source</code></p>"},{"location":"api/sbr/source/#sbr.source.GeoIP.dpath","title":"dpath  <code>instance-attribute</code>","text":"<pre><code>dpath: Path = Path(dpath)\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoIP.fpath","title":"fpath  <code>property</code>","text":"<pre><code>fpath: Path\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoIP.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str = name\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoIP.url","title":"url  <code>instance-attribute</code>","text":"<pre><code>url: str = url\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoIP.__init__","title":"__init__","text":"<pre><code>__init__(name: str, url: str, dpath: StrPath) -&gt; None\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoIP.get","title":"get  <code>async</code>","text":"<pre><code>get(*key: str) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoIP.keys","title":"keys  <code>async</code>","text":"<pre><code>keys() -&gt; list[str]\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoSite","title":"GeoSite","text":"<p>               Bases: <code>Source</code></p>"},{"location":"api/sbr/source/#sbr.source.GeoSite.dpath","title":"dpath  <code>instance-attribute</code>","text":"<pre><code>dpath: Path = Path(dpath)\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoSite.fpath","title":"fpath  <code>property</code>","text":"<pre><code>fpath: Path\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoSite.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str = name\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoSite.url","title":"url  <code>instance-attribute</code>","text":"<pre><code>url: str = url\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoSite.__init__","title":"__init__","text":"<pre><code>__init__(name: str, url: str, dpath: StrPath) -&gt; None\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoSite.get","title":"get  <code>async</code>","text":"<pre><code>get(*key: str) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.GeoSite.keys","title":"keys  <code>async</code>","text":"<pre><code>keys() -&gt; list[str]\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.Preset","title":"Preset","text":"<p>               Bases: <code>Source</code></p>"},{"location":"api/sbr/source/#sbr.source.Preset.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = 'preset'\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.Preset.__init__","title":"__init__","text":"<pre><code>__init__() -&gt; None\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.Preset.get","title":"get  <code>async</code>","text":"<pre><code>get(*key: str) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.Preset.keys","title":"keys  <code>async</code>","text":"<pre><code>keys() -&gt; list[str]\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.PresetConfig","title":"PresetConfig","text":"<p>               Bases: <code>NamedTuple</code></p>"},{"location":"api/sbr/source/#sbr.source.PresetConfig.exclude","title":"exclude  <code>instance-attribute</code>","text":"<pre><code>exclude: list[str]\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.PresetConfig.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: str\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.PresetConfig.include","title":"include  <code>instance-attribute</code>","text":"<pre><code>include: list[str]\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.PresetConfig.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.SingBoxRuleSet","title":"SingBoxRuleSet","text":"<p>               Bases: <code>Source</code></p>"},{"location":"api/sbr/source/#sbr.source.SingBoxRuleSet.dpath","title":"dpath  <code>instance-attribute</code>","text":"<pre><code>dpath: Path = Path(dpath)\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.SingBoxRuleSet.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str = name\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.SingBoxRuleSet.url","title":"url  <code>instance-attribute</code>","text":"<pre><code>url: Template\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.SingBoxRuleSet.__init__","title":"__init__","text":"<pre><code>__init__(\n    name: str, url: str | Template, dpath: StrPath\n) -&gt; None\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.SingBoxRuleSet.get","title":"get  <code>async</code>","text":"<pre><code>get(*key: str) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.SingBoxRuleSet.keys","title":"keys  <code>async</code>","text":"<pre><code>keys() -&gt; list[str]\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.Source","title":"Source","text":"<p>               Bases: <code>ABC</code></p>"},{"location":"api/sbr/source/#sbr.source.Source.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.Source.__init__","title":"__init__","text":"<pre><code>__init__() -&gt; None\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.Source.get","title":"get  <code>async</code>","text":"<pre><code>get(*key: str) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.Source.keys","title":"keys  <code>async</code>","text":"<pre><code>keys() -&gt; list[str]\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.get_rule","title":"get_rule  <code>async</code>","text":"<pre><code>get_rule(*spec: str) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/source/#sbr.source.get_source","title":"get_source","text":"<pre><code>get_source(name: str) -&gt; Source\n</code></pre>"},{"location":"api/sbr/source/preset/","title":"sbr.source.preset","text":""},{"location":"api/sbr/source/preset/#sbr.source.preset.PRESETS","title":"PRESETS  <code>module-attribute</code>","text":"<pre><code>PRESETS: list[PresetConfig] = [\n    PresetConfig(\n        \"ads\",\n        \"\ud83d\uded1 ADs\",\n        [\n            \"blackmatrix7:Advertising\",\n            \"DustinWin/geosite-all:ads\",\n            \"MetaCubeX/geosite:*-ads,*-ads-all,*@ads\",\n        ],\n        [],\n    ),\n    PresetConfig(\n        \"private\",\n        \"\ud83d\udd12 Private\",\n        [\n            \"blackmatrix7:Lan,NTPService\",\n            \"DustinWin/geoip-all:private\",\n            \"DustinWin/geosite-all:private\",\n            \"MetaCubeX/geoip:private\",\n            \"MetaCubeX/geosite:category-ntp*,private\",\n        ],\n        [\"preset:ads\"],\n    ),\n    PresetConfig(\n        \"cn\",\n        \"\ud83c\udde8\ud83c\uddf3 CN\",\n        [\n            \"blackmatrix7:ChinaMax,Direct\",\n            \"DustinWin/geoip-all:cn\",\n            \"DustinWin/geosite-all:cn\",\n            \"liblaf:cn\",\n            \"MetaCubeX/geoip:cn\",\n            \"MetaCubeX/geosite:cn,*-cn,*@cn\",\n        ],\n        [\"preset:ads\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"proxy\",\n        \"\u2708\ufe0f Proxy\",\n        [\n            \"blackmatrix7:Global\",\n            \"DustinWin/geosite-all:proxy\",\n            \"MetaCubeX/geosite:*!cn*\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"ai\",\n        \"\ud83e\udd16 AI\",\n        [\n            \"blackmatrix7:Claude,Copilot,Gemini,OpenAI\",\n            \"DustinWin/geosite-all:ai\",\n            \"MetaCubeX/geosite:openai\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"download\",\n        \"\u2601\ufe0f Download\",\n        [\n            \"blackmatrix7:Developer,Download,OneDrive\",\n            \"MetaCubeX/geosite:category-dev,onedrive\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"emby\",\n        \"\ud83c\udf5f Emby\",\n        [\"NotSFC:Emby\"],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n    PresetConfig(\n        \"media\",\n        \"\ud83d\udcfa Media\",\n        [\n            \"blackmatrix7:GlobalMedia\",\n            \"DustinWin/geosite-all:youtube\",\n            \"MetaCubeX/geosite-lite:proxymedia,youtube\",\n            \"MetaCubeX/geosite:youtube\",\n        ],\n        [\"preset:ads\", \"preset:cn\", \"preset:private\"],\n    ),\n]\n</code></pre>"},{"location":"api/sbr/source/preset/#sbr.source.preset.Preset","title":"Preset","text":"<p>               Bases: <code>Source</code></p>"},{"location":"api/sbr/source/preset/#sbr.source.preset.Preset.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = 'preset'\n</code></pre>"},{"location":"api/sbr/source/preset/#sbr.source.preset.Preset.__init__","title":"__init__","text":"<pre><code>__init__() -&gt; None\n</code></pre>"},{"location":"api/sbr/source/preset/#sbr.source.preset.Preset.get","title":"get  <code>async</code>","text":"<pre><code>get(*key: str) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/source/preset/#sbr.source.preset.Preset.keys","title":"keys  <code>async</code>","text":"<pre><code>keys() -&gt; list[str]\n</code></pre>"},{"location":"api/sbr/source/preset/#sbr.source.preset.PresetConfig","title":"PresetConfig","text":"<p>               Bases: <code>NamedTuple</code></p>"},{"location":"api/sbr/source/preset/#sbr.source.preset.PresetConfig.exclude","title":"exclude  <code>instance-attribute</code>","text":"<pre><code>exclude: list[str]\n</code></pre>"},{"location":"api/sbr/source/preset/#sbr.source.preset.PresetConfig.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: str\n</code></pre>"},{"location":"api/sbr/source/preset/#sbr.source.preset.PresetConfig.include","title":"include  <code>instance-attribute</code>","text":"<pre><code>include: list[str]\n</code></pre>"},{"location":"api/sbr/source/preset/#sbr.source.preset.PresetConfig.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/sbr/source/preset/#sbr.source.preset.get_preset","title":"get_preset  <code>async</code>","text":"<pre><code>get_preset(_id: str, *, exclude: bool = True) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/source/preset/#sbr.source.preset.get_rule","title":"get_rule  <code>async</code>","text":"<pre><code>get_rule(*spec: str) -&gt; Rule\n</code></pre>"},{"location":"api/sbr/typing/","title":"sbr.typing","text":""},{"location":"api/sbr/typing/#sbr.typing.StrPath","title":"StrPath  <code>module-attribute</code>","text":"<pre><code>StrPath = str | PathLike[str]\n</code></pre>"},{"location":"api/sbr/utils/","title":"sbr.utils","text":""},{"location":"api/sbr/utils/#sbr.utils.as_set","title":"as_set","text":"<pre><code>as_set(obj: str | Iterable[str]) -&gt; set[str]\n</code></pre>"},{"location":"api/sbr/utils/#sbr.utils.download","title":"download  <code>async</code>","text":"<pre><code>download(\n    url: str,\n    _fpath: StrPath | None = None,\n    *,\n    redo: bool = False,\n    verbose: bool | None = True,\n    expires: str | int | datetime | timedelta | None = None\n) -&gt; Path\n</code></pre>"},{"location":"api/sbr/utils/#sbr.utils.split_strip","title":"split_strip","text":"<pre><code>split_strip(text: str, sep: str | None = ',') -&gt; list[str]\n</code></pre>"},{"location":"api/sbr/utils/#sbr.utils.strip_comments","title":"strip_comments","text":"<pre><code>strip_comments(text: str) -&gt; Generator[str, None, None]\n</code></pre>"}]}